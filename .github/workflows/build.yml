name: OTZ-Ads - Prebid.js 

on:
  push:
    branches: [ "feat/notification-slack" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest  
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      
    steps:    
    - name: Slack Notification
      id: slack
      uses: slackapi/slack-github-action@v1.24.0
      with:  
        payload: |
          {
            "text": "Build Started: ${{ github.repository }} : ${{ github.run_id }}",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "Build Started: ${{ github.repository }} : ${{ github.run_id }}"
                }
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

    - name: Checkout repository    
      uses: actions/checkout@v4

    - name: Cache npm dependencies
      uses: actions/setup-node@v3
      with: 
        node-version: 18
        cache: 'npm'

    - name: Install npm dependencies
      run: npm ci      
      
    - name: Build project with Gulp
      run: |
        gulp build --modules=modules.json        
  
    - name: Upload to S3 Bucket
      run: |
        aws s3 cp build/dist/prebid.js s3://${{ secrets.AWS_S3_BUCKET }} --region ${{ secrets.AWS_S3_REGION }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Invalidate Cloudflare Cache
      run: |
        curl -s --connect-timeout 1 -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache" \
        -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_KEY }}" \
        -H "Content-Type: application/json" \
        --data '{
          "files": ["https://tags.otzads.net/prebid/prebid.js"]
        }'       

    - name: Slack Notification - Status
      id: slack-status
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "text": "Build Status: ${{ job.status }}\nURL: ${{ github.run_url }}"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        
