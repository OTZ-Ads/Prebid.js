name: OTZ-Ads - Prebid.js 

on:
  push:
    branches: [ "feat/notification-slack" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest  
    steps:
    - name: Send Slack Notification - Started      
      run: |
        REPO_NAME=$(basename `git rev-parse --show-toplevel`)
        curl -X POST -H 'Content-type: application/json' --data '{
          "text": "Release $REPO_NAME iniciada."
        }' ${{ secrets.SLACK_WEBHOOK_URL }}


    - name: Checkout repository    
      uses: actions/checkout@v4

    - name: Cache npm dependencies
      uses: actions/setup-node@v3
      with: 
        node-version: 18
        cache: 'npm'

    - name: Install npm dependencies
      run: npm ci      
      
    - name: Build project with Gulp
      run: |
        gulp build --modules=modules.json        
  
    - name: Upload to S3 Bucket
      run: |
        aws s3 cp build/dist/prebid.js s3://${{ secrets.AWS_S3_BUCKET }} --region ${{ secrets.AWS_S3_REGION }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Invalidate Cloudflare Cache
      run: |
        curl -s --connect-timeout 1 -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache" \
        -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_KEY }}" \
        -H "Content-Type: application/json" \
        --data '{
          "files": ["https://tags.otzads.net/prebid/prebid.js"]
        }'

    - name: Send Slack Notification - Finished
      id: slack-notification      
      run: |
        REPO_NAME=$(basename `git rev-parse --show-toplevel`)
        if [[ ${{ job.status }} == 'success' ]]; then
          STATUS="Bem-Sucedido"
        else
          STATUS="Falhou"
        fi
        curl -X POST -H 'Content-type: application/json' --data '{
          "text": "Release $REPO_NAME $STATUS."
        }' ${{ secrets.SLACK_WEBHOOK_URL }}
